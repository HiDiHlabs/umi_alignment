import os
from datetime import datetime
import pandas as pd
from pathlib import Path
from itertools import product
import tempfile


container: "docker://condaforge/mambaforge"


include: "rules/common.smk"  #done
include: "rules/create_links.smk"
include: "rules/umi_based_rules.smk"  #done
include: "rules/adapter_trimming.smk"  #done
include: "rules/alignment.smk"  #done
#  include: "rules/duplicate_marking.smk"  #done
include: "rules/flagstatt.smk"  #done
include: "rules/metric_hsmetrics.smk"  #done
include: "rules/metric_insert_size.smk"  #done
include: "rules/metric_mosdepth.smk"  #done
include: "rules/metric_wgs_coverage.smk"  #done
include: "rules/recalibration.smk"  #done


rule all:
    input:
        # expand(
        #     wrkdir / "alignments" / "{sample}_merged_umi_annot.bam",
        #     sample=config["sample"],
        # ),
        expand(
            wrkdir / "alignments" / "{sample}_dedup.recall.sorted.bam",
            sample=config["pid"] + "_" + config["sample"],
        ),
        expand(
            wrkdir / "alignments" / "{sample}_dedup.recall.sorted.bam.bai",
            sample=config["pid"] + "_" + config["sample"],
        ),
        expand(
            wrkdir / "metrics" / "{sample}.mosdepth.global.dist.txt",
            sample=config["pid"] + "_" + config["sample"],
        ),
        expand(
            wrkdir / "metrics" / "{sample}_{ext}.flagstat",
            sample=config["pid"] + "_" + config["sample"],
            ext=["dedup.recall.sorted"],
        ),
        expand(
            wrkdir / "metrics" / "{sample}_insert_size_metrics.txt",
            sample=config["pid"] + "_" + config["sample"],
        ),
        expand(
            wrkdir / "metrics" / "{sample}_insert_size.pdf",
            sample=config["pid"] + "_" + config["sample"],
        ),
        expand(
            wrkdir / "metrics" / "{sample}.mosdepth.summary.txt",
            sample=config["pid"] + "_" + config["sample"],
        ),
        expand(
            wrkdir / "metrics" / "{sample}.grouped-family-sizes.txt",
            sample=config["pid"] + "_" + config["sample"],
        ),
        expand(
            wrkdir / "metrics" / "{sample}_recal_data.table",
            sample=config["pid"] + "_" + config["sample"],
        ),
        expand(
            wrkdir / "metrics" / "{sample}_covariates.pdf",
            sample=config["pid"] + "_" + config["sample"],
        ),
        expand(
            wrkdir / "metrics" / "{sample}_coverage.png",
            sample=config["pid"] + "_" + config["sample"],
        )
        if config["SeqType"] not in ["Panel", "WES"]
        else [],
        expand(
            wrkdir / "metrics" / "{sample}.hs_metrics.txt",
            sample=config["pid"] + "_" + config["sample"],
        )
        if config["SeqType"] in ["Panel", "WES"]
        else [],
        expand(
            wrkdir
            / "metrics"
            / "correct_umi"
            / "{run_id}"
            / "{sample}_{lane}_umi_metrics.txt",
            filtered_product,
            run_id=RUN_ID,
            sample=config["pid"] + "_" + config["sample"],
            lane=LANE,
        )
        if correct_umi
        else [],
        expand(
            wrkdir / "metrics" / "{sample}_consensus_metrics.tsv",
            sample=config["pid"] + "_" + config["sample"],
        ),
